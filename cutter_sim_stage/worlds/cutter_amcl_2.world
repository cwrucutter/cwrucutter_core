define block model
(
  size [0.5 0.5 2]
  gui_nose 0
  laser_return 1
  obstacle_return 0
)

define sick_lms291 ranger
(
  sensor(
    range_max 80.0
    fov 180.0
    samples 181
  )
  #generic model stuff
  size [0.15 0.15 .2]
)

define cutter position
(
  size [1 .6 .8]
  origin [-0.4 0 0 0]
  gui_nose 1
  drive "diff"
  sick_lms291(pose [-0.88 0 0.2 180])
  #Next two lines make the stage simulation return the true global position
  #TODO: Remove in the future when we have other sensors simulated...
  #      But for now, we can use assume true localization in order to get 
  #      path driving working.
  #      Eventually, use localization "odom" and provide an odom noise model
  localization "gps"   
  localization_origin [0 0 0 0]
)

define floorplan model
(
  color "gray30"

  # most maps will need a bounding box
  boundary 1

  gui_nose 0
  gui_grid 0

  gui_outline 0
  gripper_return 0
  fiducial_return 0
  laser_return 0
)


# set the resolution of the underlying raytrace model in meters
resolution 0.02

interval_sim 100  # simulation timestep in milliseconds


window
( 
  size [ 745.000 448.000 ] 
  show_grid 1
  rotate [ 0.000 -1.560 ]
  scale 28.806 
)

# load an environment bitmap
floorplan
( 
  name "fence2"
  bitmap "fence2.png"
  size [7 15 1]
  pose [0.0 0.0 0.0 0.5 ]
)

define snowfield model
(
  color "pink"

  # most maps will need a bounding box
  boundary 1

  gui_nose 0
  gui_grid 0

  gui_outline 0
  gripper_return 0
  fiducial_return 0
  laser_return 1
  obstacle_return 0
)

snowfield
( 
  name "snow2"
  #bitmap "fence2.png"
  size [2 10 0.2]
  pose [0.0 -0.5 0.0 0.0 ]
)

define chalkline model
(
  color "orange"

  # most maps will need a bounding box
  boundary 1

  gui_nose 0
  gui_grid 0

  gui_outline 0
  gripper_return 0
  fiducial_return 0
  laser_return 0
  obstacle_return 0
)
chalkline
( 
  name "garage2"
  bitmap "garage2.png"
  size [4 3 0.1]
  pose [1.5 6.0 0.0 0.0 ]
)

# throw in a robot
cutter( pose [ 1 6 0 0 ] name "cutter" color "blue")
block( pose [ 1.5 9 0 0 ] color "black")
block( pose [ -4.9 -3.5 0 0 ] color "white")
block( pose [ 5.3 3.3 0 0 ] color "orange")
block( pose [ -2.4 -8.5 0 0 ] color "pink")
block( pose [ 4.95 2.5 0 0 ] color "green")
